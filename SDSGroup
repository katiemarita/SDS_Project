{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "import os\n",
    "import urllib\n",
    "import zipfile\n",
    "import geopandas as gpd\n",
    "import seaborn as sns\n",
    "import shapely.geometry\n",
    "from shapely.geometry import Point\n",
    "import libpysal as lps\n",
    "import pysal as ps\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import pysal.viz as viz\n",
    "import re\n",
    "import shapely\n",
    "import random \n",
    "random.seed(123456789) # For reproducibility\n",
    "%matplotlib inline\n",
    "import warnings\n",
    "warnings.simplefilter('ignore')\n",
    "\n",
    "import matplotlib as mpl\n",
    "mpl.use('TkAgg')\n",
    "# Make sure output is into notebook\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.cm as cm\n",
    "\n",
    "# Make numeric display a bit easier\n",
    "pd.set_option('display.float_format', lambda x: '{:,.4f}'.format(x))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## London MSOA Covid Death & Demographic CSV Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MSOA11CD</th>\n",
       "      <th>MSOA_name</th>\n",
       "      <th>HOC_MSOA_NM</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>USUALRES</th>\n",
       "      <th>White</th>\n",
       "      <th>BAME</th>\n",
       "      <th>White%</th>\n",
       "      <th>BAME%</th>\n",
       "      <th>deprived%</th>\n",
       "      <th>eng_hhold</th>\n",
       "      <th>eng_hhold%</th>\n",
       "      <th>none_eng_hhold</th>\n",
       "      <th>none_eng_hhold%</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>E02000001</td>\n",
       "      <td>City of London 001</td>\n",
       "      <td>City of London</td>\n",
       "      <td>4.0000</td>\n",
       "      <td>7,375.0000</td>\n",
       "      <td>5,799.0000</td>\n",
       "      <td>1,576.0000</td>\n",
       "      <td>78.6000</td>\n",
       "      <td>21.4000</td>\n",
       "      <td>5.2000</td>\n",
       "      <td>3,825.0000</td>\n",
       "      <td>87.2000</td>\n",
       "      <td>560.0000</td>\n",
       "      <td>12.8000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    MSOA11CD           MSOA_name     HOC_MSOA_NM  total_deaths   USUALRES  \\\n",
       "0  E02000001  City of London 001  City of London        4.0000 7,375.0000   \n",
       "\n",
       "       White       BAME  White%   BAME%  deprived%  eng_hhold  eng_hhold%  \\\n",
       "0 5,799.0000 1,576.0000 78.6000 21.4000     5.2000 3,825.0000     87.2000   \n",
       "\n",
       "   none_eng_hhold  none_eng_hhold%  \n",
       "0        560.0000          12.8000  "
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# ldn_df = London_Dataframe\n",
    "ldn_df = pd.read_csv(\"London_dataset.csv\")\n",
    "ldn_df.drop(['Unnamed: 4', 'geometry', 'March', 'April', 'May', 'June', 'July', 'Mixed/multiple ethnic groups', \n",
    "             'Asian/Asian British', 'Black/African/Caribbean/Black British', 'Other ethnic group',\n",
    "            'Mixed/multiple ethnic groups (%)', 'Asian/Asian British (%)', 'Black/African/Caribbean/Black British (%)',\n",
    "            'Other ethnic group (%)', '% of people aged over 60 who live in pension credit households'], axis=1, inplace=True)\n",
    "ldn_df.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MSOA11CD</th>\n",
       "      <th>MSOA_name</th>\n",
       "      <th>HOC_MSOA_NM</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>USUALRES</th>\n",
       "      <th>White</th>\n",
       "      <th>BAME</th>\n",
       "      <th>White%</th>\n",
       "      <th>BAME%</th>\n",
       "      <th>deprived%</th>\n",
       "      <th>...</th>\n",
       "      <th>eng_hhold%</th>\n",
       "      <th>none_eng_hhold</th>\n",
       "      <th>none_eng_hhold%</th>\n",
       "      <th>mort_rate</th>\n",
       "      <th>mort_rate_score</th>\n",
       "      <th>White%_score</th>\n",
       "      <th>BAME%_score</th>\n",
       "      <th>deprived%_score</th>\n",
       "      <th>eng_hhold%_score</th>\n",
       "      <th>none_eng_hhold%_score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>E02000001</td>\n",
       "      <td>City of London 001</td>\n",
       "      <td>City of London</td>\n",
       "      <td>4.0000</td>\n",
       "      <td>7,375.0000</td>\n",
       "      <td>5,799.0000</td>\n",
       "      <td>1,576.0000</td>\n",
       "      <td>78.6000</td>\n",
       "      <td>21.4000</td>\n",
       "      <td>5.2000</td>\n",
       "      <td>...</td>\n",
       "      <td>87.2000</td>\n",
       "      <td>560.0000</td>\n",
       "      <td>12.8000</td>\n",
       "      <td>54.2373</td>\n",
       "      <td>-0.7752</td>\n",
       "      <td>0.9271</td>\n",
       "      <td>-0.9271</td>\n",
       "      <td>-1.3897</td>\n",
       "      <td>0.3179</td>\n",
       "      <td>-0.3179</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    MSOA11CD           MSOA_name     HOC_MSOA_NM  total_deaths   USUALRES  \\\n",
       "0  E02000001  City of London 001  City of London        4.0000 7,375.0000   \n",
       "\n",
       "       White       BAME  White%   BAME%  deprived%  ...  eng_hhold%  \\\n",
       "0 5,799.0000 1,576.0000 78.6000 21.4000     5.2000  ...     87.2000   \n",
       "\n",
       "   none_eng_hhold  none_eng_hhold%  mort_rate  mort_rate_score  White%_score  \\\n",
       "0        560.0000          12.8000    54.2373          -0.7752        0.9271   \n",
       "\n",
       "   BAME%_score  deprived%_score  eng_hhold%_score  none_eng_hhold%_score  \n",
       "0      -0.9271          -1.3897            0.3179                -0.3179  \n",
       "\n",
       "[1 rows x 21 columns]"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ldn_df['mort_rate'] = pd.Series((ldn_df['total_deaths'] / ldn_df['USUALRES']*100000))\n",
    "#mort_rate = mortality rate a.k.a. number of deaths per 100,000 of the population. \n",
    "#used calculation from here: https://www.cdc.gov/csels/dsepd/ss1978/lesson3/section3.html\n",
    "ldn_df['mort_rate_score'] = pd.Series((ldn_df['mort_rate'] - ldn_df['mort_rate'].mean()) / ldn_df['mort_rate'].std())\n",
    "ldn_df['White%_score'] = pd.Series((ldn_df['White%'] - ldn_df['White%'].mean()) / ldn_df['White%'].std())\n",
    "ldn_df['BAME%_score'] = pd.Series((ldn_df['BAME%'] - ldn_df['BAME%'].mean()) / ldn_df['BAME%'].std())\n",
    "ldn_df['deprived%_score'] = pd.Series((ldn_df['deprived%'] - ldn_df['deprived%'].mean()) / ldn_df['deprived%'].std())\n",
    "ldn_df['eng_hhold%_score'] = pd.Series((ldn_df['eng_hhold%'] - ldn_df['eng_hhold%'].mean()) / ldn_df['eng_hhold%'].std())\n",
    "ldn_df['eng_hhold%_score'] = pd.Series((ldn_df['eng_hhold%'] - ldn_df['eng_hhold%'].mean()) / ldn_df['eng_hhold%'].std())\n",
    "ldn_df['none_eng_hhold%_score'] = pd.Series((ldn_df['none_eng_hhold%'] - ldn_df['none_eng_hhold%'].mean()) / ldn_df['none_eng_hhold%'].std())\n",
    "ldn_df.head(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## London MSOA Shapefile Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MSOA11CD</th>\n",
       "      <th>geometry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>E02000001</td>\n",
       "      <td>(POLYGON ((531667.624000648 180534.9919998788,...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    MSOA11CD                                           geometry\n",
       "0  E02000001  (POLYGON ((531667.624000648 180534.9919998788,..."
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from shapely.geometry import Polygon\n",
    "msoas=gpd.read_file('MSOA_2011_London_gen_MHW.shp')\n",
    "msoas.drop(['MSOA11NM', 'LAD11CD', 'LAD11NM', 'RGN11CD', 'RGN11NM', 'USUALRES',\n",
    "           'HHOLDRES', 'COMESTRES', 'POPDEN', 'HHOLDS', 'AVHHOLDSZ'], axis=1, inplace=True)\n",
    "msoas.head(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Merging CSV & Shapefile Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MSOA11CD</th>\n",
       "      <th>MSOA_name</th>\n",
       "      <th>HOC_MSOA_NM</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>USUALRES</th>\n",
       "      <th>White</th>\n",
       "      <th>BAME</th>\n",
       "      <th>White%</th>\n",
       "      <th>BAME%</th>\n",
       "      <th>deprived%</th>\n",
       "      <th>...</th>\n",
       "      <th>none_eng_hhold</th>\n",
       "      <th>none_eng_hhold%</th>\n",
       "      <th>mort_rate</th>\n",
       "      <th>mort_rate_score</th>\n",
       "      <th>White%_score</th>\n",
       "      <th>BAME%_score</th>\n",
       "      <th>deprived%_score</th>\n",
       "      <th>eng_hhold%_score</th>\n",
       "      <th>none_eng_hhold%_score</th>\n",
       "      <th>geometry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>E02000001</td>\n",
       "      <td>City of London 001</td>\n",
       "      <td>City of London</td>\n",
       "      <td>4.0000</td>\n",
       "      <td>7,375.0000</td>\n",
       "      <td>5,799.0000</td>\n",
       "      <td>1,576.0000</td>\n",
       "      <td>78.6000</td>\n",
       "      <td>21.4000</td>\n",
       "      <td>5.2000</td>\n",
       "      <td>...</td>\n",
       "      <td>560.0000</td>\n",
       "      <td>12.8000</td>\n",
       "      <td>54.2373</td>\n",
       "      <td>-0.7752</td>\n",
       "      <td>0.9271</td>\n",
       "      <td>-0.9271</td>\n",
       "      <td>-1.3897</td>\n",
       "      <td>0.3179</td>\n",
       "      <td>-0.3179</td>\n",
       "      <td>(POLYGON ((531667.624000648 180534.9919998788,...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    MSOA11CD           MSOA_name     HOC_MSOA_NM  total_deaths   USUALRES  \\\n",
       "0  E02000001  City of London 001  City of London        4.0000 7,375.0000   \n",
       "\n",
       "       White       BAME  White%   BAME%  deprived%  ...  none_eng_hhold  \\\n",
       "0 5,799.0000 1,576.0000 78.6000 21.4000     5.2000  ...        560.0000   \n",
       "\n",
       "   none_eng_hhold%  mort_rate  mort_rate_score  White%_score  BAME%_score  \\\n",
       "0          12.8000    54.2373          -0.7752        0.9271      -0.9271   \n",
       "\n",
       "   deprived%_score  eng_hhold%_score  none_eng_hhold%_score  \\\n",
       "0          -1.3897            0.3179                -0.3179   \n",
       "\n",
       "                                            geometry  \n",
       "0  (POLYGON ((531667.624000648 180534.9919998788,...  \n",
       "\n",
       "[1 rows x 22 columns]"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "db=ldn_df.merge(msoas, on=['MSOA11CD'], how='left')\n",
    "db_new=db.dropna()\n",
    "db.head(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Converting to GeoDataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MSOA11CD</th>\n",
       "      <th>MSOA_name</th>\n",
       "      <th>HOC_MSOA_N</th>\n",
       "      <th>total_deat</th>\n",
       "      <th>USUALRES</th>\n",
       "      <th>White</th>\n",
       "      <th>BAME</th>\n",
       "      <th>White%</th>\n",
       "      <th>BAME%</th>\n",
       "      <th>deprived%</th>\n",
       "      <th>...</th>\n",
       "      <th>none_eng_h</th>\n",
       "      <th>none_eng_1</th>\n",
       "      <th>mort_rate</th>\n",
       "      <th>mort_rate_</th>\n",
       "      <th>White%_sco</th>\n",
       "      <th>BAME%_scor</th>\n",
       "      <th>deprived%_</th>\n",
       "      <th>eng_hhol_1</th>\n",
       "      <th>none_eng_2</th>\n",
       "      <th>geometry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>E02000001</td>\n",
       "      <td>City of London 001</td>\n",
       "      <td>City of London</td>\n",
       "      <td>4.0000</td>\n",
       "      <td>7,375.0000</td>\n",
       "      <td>5,799.0000</td>\n",
       "      <td>1,576.0000</td>\n",
       "      <td>78.6000</td>\n",
       "      <td>21.4000</td>\n",
       "      <td>5.2000</td>\n",
       "      <td>...</td>\n",
       "      <td>560.0000</td>\n",
       "      <td>12.8000</td>\n",
       "      <td>54.2373</td>\n",
       "      <td>-0.7752</td>\n",
       "      <td>0.9271</td>\n",
       "      <td>-0.9271</td>\n",
       "      <td>-1.3897</td>\n",
       "      <td>0.3179</td>\n",
       "      <td>-0.3179</td>\n",
       "      <td>(POLYGON ((531667.624000648 180534.9919998788,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>E02000002</td>\n",
       "      <td>Barking and Dagenham 001</td>\n",
       "      <td>Marks Gate</td>\n",
       "      <td>8.0000</td>\n",
       "      <td>6,775.0000</td>\n",
       "      <td>4,403.0000</td>\n",
       "      <td>2,372.0000</td>\n",
       "      <td>65.0000</td>\n",
       "      <td>35.0000</td>\n",
       "      <td>31.0000</td>\n",
       "      <td>...</td>\n",
       "      <td>254.0000</td>\n",
       "      <td>9.4000</td>\n",
       "      <td>118.0812</td>\n",
       "      <td>0.2118</td>\n",
       "      <td>0.2228</td>\n",
       "      <td>-0.2228</td>\n",
       "      <td>1.2141</td>\n",
       "      <td>0.6972</td>\n",
       "      <td>-0.6972</td>\n",
       "      <td>POLYGON ((548881.56299972 190845.2650004694, 5...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>E02000003</td>\n",
       "      <td>Barking and Dagenham 002</td>\n",
       "      <td>Chadwell Heath East</td>\n",
       "      <td>10.0000</td>\n",
       "      <td>10,045.0000</td>\n",
       "      <td>5,486.0000</td>\n",
       "      <td>4,559.0000</td>\n",
       "      <td>54.6000</td>\n",
       "      <td>45.4000</td>\n",
       "      <td>18.9000</td>\n",
       "      <td>...</td>\n",
       "      <td>403.0000</td>\n",
       "      <td>10.5000</td>\n",
       "      <td>99.5520</td>\n",
       "      <td>-0.0747</td>\n",
       "      <td>-0.3157</td>\n",
       "      <td>0.3157</td>\n",
       "      <td>-0.0071</td>\n",
       "      <td>0.5745</td>\n",
       "      <td>-0.5745</td>\n",
       "      <td>POLYGON ((549102.4379997085 189324.6249996283,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>E02000004</td>\n",
       "      <td>Barking and Dagenham 003</td>\n",
       "      <td>Eastbrookend</td>\n",
       "      <td>14.0000</td>\n",
       "      <td>6,182.0000</td>\n",
       "      <td>5,006.0000</td>\n",
       "      <td>1,176.0000</td>\n",
       "      <td>81.0000</td>\n",
       "      <td>19.0000</td>\n",
       "      <td>15.8000</td>\n",
       "      <td>...</td>\n",
       "      <td>104.0000</td>\n",
       "      <td>4.5000</td>\n",
       "      <td>226.4639</td>\n",
       "      <td>1.8874</td>\n",
       "      <td>1.0514</td>\n",
       "      <td>-1.0514</td>\n",
       "      <td>-0.3200</td>\n",
       "      <td>1.2439</td>\n",
       "      <td>-1.2439</td>\n",
       "      <td>POLYGON ((551549.9979995684 187364.6370000704,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>E02000005</td>\n",
       "      <td>Barking and Dagenham 004</td>\n",
       "      <td>Becontree Heath</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>8,562.0000</td>\n",
       "      <td>5,674.0000</td>\n",
       "      <td>2,888.0000</td>\n",
       "      <td>66.3000</td>\n",
       "      <td>33.7000</td>\n",
       "      <td>22.9000</td>\n",
       "      <td>...</td>\n",
       "      <td>315.0000</td>\n",
       "      <td>9.9000</td>\n",
       "      <td>81.7566</td>\n",
       "      <td>-0.3498</td>\n",
       "      <td>0.2902</td>\n",
       "      <td>-0.2902</td>\n",
       "      <td>0.3966</td>\n",
       "      <td>0.6415</td>\n",
       "      <td>-0.6415</td>\n",
       "      <td>POLYGON ((549099.6339997301 187656.076, 549161...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    MSOA11CD                 MSOA_name           HOC_MSOA_N  total_deat  \\\n",
       "0  E02000001        City of London 001       City of London      4.0000   \n",
       "1  E02000002  Barking and Dagenham 001           Marks Gate      8.0000   \n",
       "2  E02000003  Barking and Dagenham 002  Chadwell Heath East     10.0000   \n",
       "3  E02000004  Barking and Dagenham 003         Eastbrookend     14.0000   \n",
       "4  E02000005  Barking and Dagenham 004      Becontree Heath      7.0000   \n",
       "\n",
       "     USUALRES      White       BAME  White%   BAME%  deprived%  ...  \\\n",
       "0  7,375.0000 5,799.0000 1,576.0000 78.6000 21.4000     5.2000  ...   \n",
       "1  6,775.0000 4,403.0000 2,372.0000 65.0000 35.0000    31.0000  ...   \n",
       "2 10,045.0000 5,486.0000 4,559.0000 54.6000 45.4000    18.9000  ...   \n",
       "3  6,182.0000 5,006.0000 1,176.0000 81.0000 19.0000    15.8000  ...   \n",
       "4  8,562.0000 5,674.0000 2,888.0000 66.3000 33.7000    22.9000  ...   \n",
       "\n",
       "   none_eng_h  none_eng_1  mort_rate  mort_rate_  White%_sco  BAME%_scor  \\\n",
       "0    560.0000     12.8000    54.2373     -0.7752      0.9271     -0.9271   \n",
       "1    254.0000      9.4000   118.0812      0.2118      0.2228     -0.2228   \n",
       "2    403.0000     10.5000    99.5520     -0.0747     -0.3157      0.3157   \n",
       "3    104.0000      4.5000   226.4639      1.8874      1.0514     -1.0514   \n",
       "4    315.0000      9.9000    81.7566     -0.3498      0.2902     -0.2902   \n",
       "\n",
       "   deprived%_  eng_hhol_1  none_eng_2  \\\n",
       "0     -1.3897      0.3179     -0.3179   \n",
       "1      1.2141      0.6972     -0.6972   \n",
       "2     -0.0071      0.5745     -0.5745   \n",
       "3     -0.3200      1.2439     -1.2439   \n",
       "4      0.3966      0.6415     -0.6415   \n",
       "\n",
       "                                            geometry  \n",
       "0  (POLYGON ((531667.624000648 180534.9919998788,...  \n",
       "1  POLYGON ((548881.56299972 190845.2650004694, 5...  \n",
       "2  POLYGON ((549102.4379997085 189324.6249996283,...  \n",
       "3  POLYGON ((551549.9979995684 187364.6370000704,...  \n",
       "4  POLYGON ((549099.6339997301 187656.076, 549161...  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "db_geo = gpd.GeoDataFrame(db_new, geometry='geometry')\n",
    "db_geo.to_file(driver='ESRI Shapefile', filename='msoa_ldn.shp')\n",
    "ldn_msoa_df=gpd.read_file('msoa_ldn.shp')\n",
    "ldn_msoa_df.head()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "GSA2019",
   "language": "python",
   "name": "gsa2019"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
